{
	"id": "e68ebab4-9e0a-40ae-8438-ed721034e4fa",
	"name": "ProductionEnv",
	"values": [
		{
			"key": "base_url",
			"value": "http://localhost/",
			"enabled": true
		},
		{
			"key": "ep_url",
			"value": "https://www.reddit.com",
			"enabled": true
		},
		{
			"key": "oauth_url",
			"value": "https://oauth.reddit.com",
			"enabled": true
		},
		{
			"key": "gateway_url",
			"value": "https://gateway.reddit.com",
			"enabled": true
		},
		{
			"key": "user_name",
			"value": "dipali_sable03",
			"enabled": true
		},
		{
			"key": "access_token",
			"value": "",
			"enabled": true
		},
		{
			"key": "vote_state",
			"value": "",
			"enabled": true
		},
		{
			"key": "vote_state_response",
			"value": "",
			"enabled": true
		},
		{
			"key": "current_step",
			"value": "",
			"enabled": true
		},
		{
			"key": "next_step",
			"value": "",
			"enabled": true
		},
		{
			"key": "post_response",
			"value": "",
			"enabled": true
		},
		{
			"key": "end_flow",
			"value": "",
			"enabled": true
		},
		{
			"key": "getPostDetails",
			"value": "(postResponse, postId, key) =>{\n    var my_post = postResponse[postId]\n    return my_post[key];\n}",
			"enabled": true
		},
		{
			"key": "isPostUpvoted",
			"value": "(postResponse, postId) =>{\n    var voteStateInResponse = eval(pm.environment.get(\"getPostDetails\"))(postResponse, postId, \"voteState\");\n    var upVotedValue = pm.globals.get(\"UPVOTED_STATE\");\n    return upVotedValue == voteStateInResponse;\n}",
			"enabled": true
		},
		{
			"key": "verifyHttpResponse200",
			"value": "() => {\n    if(pm.environment.get(\"current_step\") == undefined) pm.environment.set(\"current_step\", \"\");\n    \n    pm.test(pm.environment.get(\"current_step\") + \": Verify HTTP response code is 200\", function () {\n         pm.response.to.have.status(200);\n    });\n}",
			"enabled": true
		},
		{
			"key": "isPostUnvoted",
			"value": "(postResponse, postId) =>{\n    var voteStateInResponse = eval(pm.environment.get(\"getPostDetails\"))(postResponse, postId, \"voteState\");\n    var upVotedValue = pm.globals.get(\"UNVOTED_STATE\");\n    return upVotedValue == voteStateInResponse;\n}",
			"enabled": true
		},
		{
			"key": "isPostDownvoted",
			"value": "(postResponse, postId) =>{\n    var voteStateInResponse = eval(pm.environment.get(\"getPostDetails\"))(postResponse, postId, \"voteState\");\n    var upVotedValue = pm.globals.get(\"DOWNVOTED_STATE\");\n    return upVotedValue == voteStateInResponse;\n}",
			"enabled": true
		},
		{
			"key": "post_id",
			"value": "",
			"enabled": true
		},
		{
			"key": "payload",
			"value": "",
			"enabled": true
		},
		{
			"key": "response_code",
			"value": "",
			"enabled": true
		},
		{
			"key": "setRequestBody",
			"value": "(obj) => {\n    const payload = Object.keys(obj).reduce((acc, cur) => {\n        return `${acc}${cur}=${obj[cur]}&`;\n    }, '');\n    pm.environment.set('payload', payload);\n}",
			"enabled": true
		}
	],
	"_postman_variable_scope": "environment",
	"_postman_exported_at": "2020-12-03T03:01:42.704Z",
	"_postman_exported_using": "Postman/7.14.0"
}